# Generated by Django 2.2.14 on 2020-07-17 18:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.encoder
import jsonfield.fields
import opaque_keys.edx.django.models
import openedx.core.djangoapps.config_model_utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LearningContextDiscussionConfig",
            fields=[
                (
                    "context_key",
                    opaque_keys.edx.django.models.LearningContextKeyField(
                        db_index=True,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Learning Context",
                    ),
                ),
                (
                    "config_slug",
                    models.CharField(
                        help_text="A unique identifier for this configuration.",
                        max_length=100,
                        verbose_name="Unique configuration slug",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DiscussionConfig",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("change_date", models.DateTimeField(auto_now_add=True, verbose_name="Change date")),
                ("enabled", models.BooleanField(default=False, verbose_name="Enabled")),
                (
                    "org",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Configuration will be available for all course runs associated with this Organization. This is the organization string (i.e. edX, MITx).",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "org_course",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Configuration will be available for all course runs associated with this course. This is should be formatted as 'org+course' (i.e. MITx+6.002x, HarvardX+CS50).",
                        max_length=255,
                        null=True,
                        validators=[openedx.core.djangoapps.config_model_utils.models.validate_course_in_org],
                        verbose_name="Course in Org",
                    ),
                ),
                (
                    "context_key",
                    opaque_keys.edx.django.models.LearningContextKeyField(
                        blank=True,
                        db_index=True,
                        help_text="Configuration is only available for this Learning Context.Formatted as the CourseKey (i.e. course-v1://MITx+6.002x+2019_Q1)",
                        max_length=255,
                        verbose_name="Learning Context",
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        help_text="A unique identifier for this configuration.",
                        max_length=100,
                        verbose_name="Unique configuration slug",
                    ),
                ),
                ("name", models.CharField(help_text="Name for this configuration (shown in UI).", max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="A helpful description for this configuration (shown in UI)."
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        help_text="The discussion tool/provider.", max_length=100, verbose_name="Discussion provider"
                    ),
                ),
                (
                    "config",
                    jsonfield.fields.JSONField(
                        dump_kwargs={"cls": jsonfield.encoder.JSONEncoder, "separators": (",", ":")},
                        help_text="The discussion configuration data that can be user visible.",
                        load_kwargs={},
                    ),
                ),
                (
                    "private_config",
                    jsonfield.fields.JSONField(
                        dump_kwargs={"cls": jsonfield.encoder.JSONEncoder, "separators": (",", ":")},
                        help_text="The discussion configuration data that contains secret informationsuch as OAuth keys etc and should not be available to users.",
                        load_kwargs={},
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Changed by",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        help_text="Configuration will be available to all course runs associated with this site.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="sites.Site",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.AddIndex(
            model_name="discussionconfig",
            index=models.Index(fields=["site", "org", "context_key"], name="discussions_site_id_fb3335_idx"),
        ),
        migrations.AddIndex(
            model_name="discussionconfig",
            index=models.Index(
                fields=["site", "org", "org_course", "context_key"], name="discussions_site_id_a33c0e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="discussionconfig",
            index=models.Index(
                fields=["site", "org", "org_course", "context_key", "slug"], name="discussions_site_id_b4edf4_idx"
            ),
        ),
    ]
